name: Build & Release Unrar Binaries

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0, v2.1.3, etc.

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: self-hosted
    if: startsWith(github.ref_name, 'v')

    steps:
      - name: Create necessary directories
        run: |
          mkdir -p binaries
          echo "UNRAR_VERSION=$(echo ${{ github.ref_name }} | sed 's/^v//')" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up QEMU emulation
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and export per-arch binaries
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          # build for amd64, arm64, armv7 and armv6
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          # export the final stage filesystem to `binaries/`
          outputs: ./binaries 
          build-args: |
            UNRAR_VERSION=${{ env.UNRAR_VERSION }}

      - name: Package binaries for release
        run: |
          mkdir -p artifacts
          sh -c 'find . -name unrar\* -exec mv {} artifacts/ \;'

      - name: Create GitHub Release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }}
          draft: false
          prerelease: false

      - name: Upload assets to Release
        uses: AButler/upload-release-assets@v3.0
        with:
          files: artifacts/*
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: ${{ github.ref_name }}

